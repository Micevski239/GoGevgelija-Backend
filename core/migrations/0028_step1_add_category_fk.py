# Generated by Django 5.1.7 on 2025-10-08 12:15

from django.db import migrations
import django.db.models.deletion
from django.db import models


def convert_categories(apps, schema_editor):
    Listing = apps.get_model('core', 'Listing')
    Category = apps.get_model('core', 'Category')
    
    # Create mapping from old string categories to new Category objects
    category_mapping = {
        'restaurant': 'Restaurant',
        'cafe': 'Cafe', 
        'bar': 'Other',
        'hotel': 'Other',
        'shop': 'Shop',
        'service': 'Other',
        'attraction': 'Entertainment',
        'other': 'Other',
    }
    
    # Get category objects by name
    categories = {}
    for cat in Category.objects.all():
        categories[cat.name] = cat
    
    # Update listings
    for listing in Listing.objects.all():
        old_category = listing.category if listing.category else 'other'
        new_category_name = category_mapping.get(old_category, 'Other')
        
        if new_category_name in categories:
            new_category = categories[new_category_name]
            # Set the new category_new field
            listing.category_new = new_category
            listing.save()


def reverse_categories(apps, schema_editor):
    # Reverse operation - set categories back to strings
    Listing = apps.get_model('core', 'Listing')
    Category = apps.get_model('core', 'Category')
    
    reverse_mapping = {
        'Restaurant': 'restaurant',
        'Cafe': 'cafe',
        'Other': 'other',
        'Shop': 'shop',
        'Entertainment': 'attraction',
        'Home': 'other',
    }
    
    for listing in Listing.objects.all():
        if listing.category_new:
            old_string = reverse_mapping.get(listing.category_new.name, 'other')
            listing.category = old_string
            listing.save()
        else:
            listing.category = 'other'
            listing.save()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0027_userpermission'),
    ]

    operations = [
        # First, add the new ForeignKey field
        migrations.AddField(
            model_name='listing',
            name='category_new',
            field=models.ForeignKey(blank=True, help_text='Select category from available categories', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.category'),
        ),
        # Run the data migration
        migrations.RunPython(convert_categories, reverse_categories),
        # Remove the old field
        migrations.RemoveField(
            model_name='listing',
            name='category',
        ),
        # Rename the new field to category
        migrations.RenameField(
            model_name='listing',
            old_name='category_new',
            new_name='category',
        ),
        # Delete the test model
        migrations.DeleteModel(
            name='test',
        ),
    ]
