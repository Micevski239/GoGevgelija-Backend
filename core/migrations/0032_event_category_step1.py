# Generated by Django 5.1.7 on 2025-10-08 12:40

import django.db.models.deletion
from django.db import migrations, models


def convert_event_categories_to_fk(apps, schema_editor):
    """Convert existing Event string categories to Category foreign keys."""
    Event = apps.get_model('core', 'Event')
    Category = apps.get_model('core', 'Category')
    
    # Create a mapping of old category strings to Category objects
    category_mapping = {}
    
    # Get all unique category values from events
    existing_categories = Event.objects.values_list('category', flat=True).distinct()
    
    for cat_name in existing_categories:
        if cat_name:  # Skip None/empty values
            # Try to find existing category or create new one
            category, created = Category.objects.get_or_create(
                name=cat_name.lower(),
                defaults={
                    'name': cat_name.lower(),
                    'icon': 'calendar-outline',  # Default icon
                    'trending': False
                }
            )
            category_mapping[cat_name] = category
    
    # Update all events to use the new foreign key
    for event in Event.objects.all():
        if event.category and event.category in category_mapping:
            event.category_new = category_mapping[event.category]
            event.save()


def reverse_event_categories_to_string(apps, schema_editor):
    """Reverse migration: convert Category foreign keys back to strings."""
    Event = apps.get_model('core', 'Event')
    
    for event in Event.objects.all():
        if event.category_new:
            event.category = event.category_new.name
            event.save()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0028_step1_add_category_fk'),
    ]

    operations = [
        # Step 1: Add image_url to Category
        migrations.AddField(
            model_name='category',
            name='image_url',
            field=models.URLField(blank=True, help_text='Optional category image URL', max_length=1000, null=True),
        ),
        
        # Step 2: Add new category_new field to Event
        migrations.AddField(
            model_name='event',
            name='category_new',
            field=models.ForeignKey(blank=True, help_text='Select category from available categories', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.category'),
        ),
        
        # Step 3: Convert existing category strings to foreign keys
        migrations.RunPython(convert_event_categories_to_fk, reverse_event_categories_to_string),
    ]